[gd_scene load_steps=4 format=3 uid="uid://c2ckwlukxwatr"]

[ext_resource type="Texture2D" uid="uid://dsl07iv4glh3c" path="res://assets/WallSet.png" id="1_u0s2e"]
[ext_resource type="PackedScene" uid="uid://d2gxkn6si0n0s" path="res://PlayerCharacter.tscn" id="2_k23ui"]

[sub_resource type="GDScript" id="GDScript_mj5qw"]
script/source = "extends Node2D

const grid_size_x = 36
const grid_size_y = 16

#stores all the current objects
var objectarray = []
#stores the list of buildable objects
var creatablesarray = [preload(\"res://wall.tscn\"), preload(\"res://objects/EnemyHopper.tscn\"), preload(\"res://objects/EnemySpiker.tscn\")]
#pointer for which part of the array to place
var selectedobject = 0

enum statelist {build, play, transition, dialogue, enter}
var current_state = statelist.build


# Called when the node enters the scene tree for the first time.
func _ready():
	
	#this creates a 2d array for objects
	for x in grid_size_x:
		objectarray.append([])
		for y in grid_size_y:
			objectarray[x].append(null)
	#pause the tree (this starts build mode)
	#get_tree().paused = true
	

func _physics_process(delta):
	pass

func _input(event):
	if event is InputEventMouseButton:
		if (event.button_index == MOUSE_BUTTON_LEFT and event.pressed):
			_create_at(event.position.x, event.position.y)
		elif (event.button_index == MOUSE_BUTTON_RIGHT and event.pressed):
			_destroy_at(event.position.x, event.position.y)
		elif (event.button_index == MOUSE_BUTTON_WHEEL_DOWN):
			selectedobject = get_selection_index(selectedobject + 1)
		elif (event.button_index == MOUSE_BUTTON_WHEEL_UP):
			selectedobject = get_selection_index(selectedobject - 1)
	
	if event is InputEventKey:
		if (event.keycode == KEY_ENTER):
			if (current_state == statelist.build):
				#unpause the game and start play mode
				current_state = statelist.play
				get_tree().paused = false

#modulos the input via the array of buildables
func get_selection_index(i):
	if (i >= creatablesarray.size()):
		return (i % creatablesarray.size())
	elif (i < 0):
		return (get_selection_index(i + creatablesarray.size()))
	else:
		return i

# attempts to create objects etc. at specificed x/y coordinates
func _create_at(a, b):
	if (current_state != statelist.build): return
	
	var newX = floor(a/16)
	var newY = floor(b/16)
	
	#take the grid pos of new coords and subtract 2 because of borders
	newX -= 2
	newY -= 2
	
	#if newX or newY < 0 or > grid size vars then it's too small/big
	# throw out
	if (newX < 0 or newX > grid_size_x):
		return
	if (newY < 0 or newY > grid_size_y):
		return
	
	#if we get to this point, mouse pos will create a wall in a valid spot
	var newwall = creatablesarray[selectedobject].instantiate()
	add_child(newwall)
	newwall.position.x = (newX+2) * 16
	newwall.position.y = (newY+2) * 16
	
	# give centering offset to objects unless they're walls (slot 0)
	if (selectedobject != 0):
		newwall.position.x += 8;
		newwall.position.y += 8;
	
	if (objectarray[newX][newY] != null):
		objectarray[newX][newY].queue_free()
	objectarray[newX][newY] = newwall

# similar code to above, but destroys
func _destroy_at(a, b):
	if (current_state != statelist.build): return
	var newX = floor(a/16)
	var newY = floor(b/16)
	newX -= 2
	newY -= 2
	if (newX < 0 or newX > grid_size_x):
		return
	if (newY < 0 or newY > grid_size_y):
		return
	if (objectarray[newX][newY] != null):
		objectarray[newX][newY].queue_free()
		
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
"

[node name="Gamespace" type="Node2D"]
process_mode = 3
script = SubResource("GDScript_mj5qw")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture_filter = 3
position = Vector2(320, 160)
texture = ExtResource("1_u0s2e")

[node name="StaticBody2D" type="StaticBody2D" parent="."]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="StaticBody2D"]
polygon = PackedVector2Array(32, 32, 256, 32, 256, 0, 0, 0, 0, 128, 32, 128, 32, 32)

[node name="CollisionPolygon2D2" type="CollisionPolygon2D" parent="StaticBody2D"]
position = Vector2(-7.62939e-06, 163.212)
scale = Vector2(1, -0.00488281)
polygon = PackedVector2Array(256, -25556.6, 32, -25556.6, 32, -5895.78, 7.62939e-06, -5895.78, 7.62939e-06, -32110.2, 256, -32110.2)

[node name="CollisionPolygon2D3" type="CollisionPolygon2D" parent="StaticBody2D"]
polygon = PackedVector2Array(384, 288, 608, 288, 608, 192, 640, 192, 640, 320, 384, 320)

[node name="CollisionPolygon2D4" type="CollisionPolygon2D" parent="StaticBody2D"]
polygon = PackedVector2Array(608, 32, 608, 128, 640, 128, 640, 0, 384, 0, 384, 32)

[node name="Playercharacter" parent="." instance=ExtResource("2_k23ui")]
position = Vector2(72, 152)
